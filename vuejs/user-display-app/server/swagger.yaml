---
openapi: 3.0.0
info:
  title: User API
  description: This is a simple User crud API
  contact:
    email: nikhil.chauhan@comprotechnologies.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://localhost:9001/users
  description: local host server
tags:
- name: users
  description: People who uses our application.
paths:
  /users:
    get:
      tags:
      - users
      summary: get all the users.
      description: |
        returns all the users.
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter
    post:
      tags:
      - users
      summary: adds a new user
      description: Adds an item to the system
      operationId: addUser
      requestBody:
        description: values to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: user created
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing user already exists
  /users/{id}:
    get:
      tags:
      - users
      summary: get a particular user.
      description: |
        By passing in the appropriate options, you can search for
        a particular user.
      parameters:
      - name: id
        in: path
        description: |
          id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter
    delete:
      tags:
      - users
      summary: deletes a particular user.
      description: "By passing in the appropriate id, you can delete \na particular user.\n"
      parameters:
      - name: id
        in: path
        description: |
          id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: deletes the matching user
        "400":
          description: bad input parameter
    patch:
      tags:
      - users
      summary: updates a particular field
      description: Updates an attribute of a user on the basis of given input
      operationId: UpdateUser
      parameters:
      - name: id
        in: path
        description: |
          id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: user to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: user updated
        "400":
          description: invalid input, object invalid
components:
  schemas:
    User:
      required:
      - dateOfBirth
      - email
      - id
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Ramesh
        email:
          type: string
          format: <name>@<platform>.com
          example: ramesh@gmail.com
        dateOfBirth:
          type: string
          format: DD/MM/YYYY
          example: 04/05/1998